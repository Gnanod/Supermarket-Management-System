/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.fms.view.panel;

import edu.ijse.fms.common.IDGenerator;
import edu.ijse.fms.controller.ControllerFactory;
import edu.ijse.fms.controller.custom.BatchController;
import edu.ijse.fms.controller.custom.CustomerController;
import edu.ijse.fms.controller.custom.CustomerOrderController;
import edu.ijse.fms.controller.custom.CustomerOrderPayment;
import edu.ijse.fms.controller.custom.ItemController;
import edu.ijse.fms.dto.BatchDTO;
import edu.ijse.fms.dto.CustomerDTO;
import edu.ijse.fms.dto.CustomerOrderDTO;
import edu.ijse.fms.dto.CustomerOrderDetailDTO;
import edu.ijse.fms.dto.CustomerOrderPaymentDTO;
import edu.ijse.fms.dto.ItemDTO;
import edu.ijse.fms.view.ChqueDetail;
import edu.ijse.fms.view.CreditCardDetail;
import edu.ijse.fms.view.DebitCardDetail;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gnanod
 */
public class CustomerOrderPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerOrderPanel
     */
    private ItemController itemController;
    private CustomerController customerController;
    private BatchController batchController;
    private CustomerOrderController cutomerOrderController;
    private DefaultTableModel dtm;
    private String batchId;
    private double qtyOnHand;
    private boolean isUpdated;
    public CustomerOrderPanel() {

        initComponents();
        cmbCustomerName.removeAllItems();
        itemController = (ItemController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ITEM);
        customerController = (CustomerController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.CUSTOMER);
        batchController = (BatchController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.BATCH);
        cutomerOrderController = (CustomerOrderController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.CUSTOMERORDER);
        dtm = (DefaultTableModel) tblCustomerOrder.getModel();
        getPavementID();
        loadCustomerNames();
        loadItemNames();
        setOrderDate();
        getID();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel34 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtOrderDate = new javax.swing.JTextField();
        cmbItemName = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtBatchId = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtGrossAmount = new javax.swing.JTextField();
        cmbCustomerName = new javax.swing.JComboBox();
        txtItemId = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        txtBalance = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomerOrder = new javax.swing.JTable();
        btnPrint = new javax.swing.JLabel();
        btnRemoveItem = new javax.swing.JLabel();
        txtQtyOnHand = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtNetAmount = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        cmbPaymentType = new javax.swing.JComboBox();
        jLabel39 = new javax.swing.JLabel();
        btnSave = new javax.swing.JLabel();
        txtCustomerId = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        txtPaymentId = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtPaidAmount = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cacheCustomer = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setBackground(new java.awt.Color(255, 255, 255));
        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(53, 126, 120));
        jLabel34.setText("                        Customer Order");
        jLabel34.setToolTipText("");
        jLabel34.setOpaque(true);
        add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 520, 50));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(27, 157, 175));
        jLabel26.setText("Order Id");
        jLabel26.setToolTipText("");
        jLabel26.setOpaque(true);
        jLabel26.setRequestFocusEnabled(false);
        add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, 140, 30));

        jLabel27.setBackground(new java.awt.Color(255, 255, 255));
        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(27, 157, 175));
        jLabel27.setText("Order Date");
        jLabel27.setToolTipText("");
        jLabel27.setOpaque(true);
        jLabel27.setRequestFocusEnabled(false);
        add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 10, 140, 30));

        txtOrderDate.setEditable(false);
        txtOrderDate.setBackground(new java.awt.Color(255, 255, 255));
        txtOrderDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtOrderDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtOrderDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOrderDateKeyPressed(evt);
            }
        });
        add(txtOrderDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 10, 170, 30));

        cmbItemName.setEditable(true);
        cmbItemName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbItemName.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        cmbItemName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemNameItemStateChanged(evt);
            }
        });
        cmbItemName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbItemNameActionPerformed(evt);
            }
        });
        add(cmbItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 130, 180, 30));

        jLabel28.setBackground(new java.awt.Color(255, 255, 255));
        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(27, 157, 175));
        jLabel28.setText("Payment Type");
        jLabel28.setToolTipText("");
        jLabel28.setOpaque(true);
        jLabel28.setRequestFocusEnabled(false);
        add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 560, 100, 30));

        jLabel29.setBackground(new java.awt.Color(255, 255, 255));
        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(27, 157, 175));
        jLabel29.setText("Payment Id");
        jLabel29.setToolTipText("");
        jLabel29.setOpaque(true);
        jLabel29.setRequestFocusEnabled(false);
        add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 140, 30));

        txtOrderId.setEditable(false);
        txtOrderId.setBackground(new java.awt.Color(255, 255, 255));
        txtOrderId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtOrderId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtOrderId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOrderIdKeyPressed(evt);
            }
        });
        add(txtOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 50, 170, 30));

        jLabel30.setBackground(new java.awt.Color(255, 255, 255));
        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(27, 157, 175));
        jLabel30.setText("Customer Id");
        jLabel30.setToolTipText("");
        jLabel30.setOpaque(true);
        jLabel30.setRequestFocusEnabled(false);
        add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 120, 30));

        txtBatchId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBatchId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBatchId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBatchIdActionPerformed(evt);
            }
        });
        txtBatchId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBatchIdKeyPressed(evt);
            }
        });
        add(txtBatchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 170, 30));

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(27, 157, 175));
        jLabel31.setText("Item   Id");
        jLabel31.setToolTipText("");
        jLabel31.setOpaque(true);
        jLabel31.setRequestFocusEnabled(false);
        add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 100, 30));

        txtGrossAmount.setEditable(false);
        txtGrossAmount.setBackground(new java.awt.Color(255, 255, 255));
        txtGrossAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtGrossAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGrossAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGrossAmountKeyPressed(evt);
            }
        });
        add(txtGrossAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 410, 250, 40));

        cmbCustomerName.setEditable(true);
        cmbCustomerName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cmbCustomerName.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        cmbCustomerName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCustomerNameItemStateChanged(evt);
            }
        });
        cmbCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerNameActionPerformed(evt);
            }
        });
        add(cmbCustomerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 170, 30));

        txtItemId.setEditable(false);
        txtItemId.setBackground(new java.awt.Color(255, 255, 255));
        txtItemId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtItemId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtItemId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtItemIdKeyPressed(evt);
            }
        });
        add(txtItemId, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 170, 30));

        jLabel32.setBackground(new java.awt.Color(255, 255, 255));
        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(27, 157, 175));
        jLabel32.setText("Item   Name");
        jLabel32.setToolTipText("");
        jLabel32.setOpaque(true);
        jLabel32.setRequestFocusEnabled(false);
        add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, 100, 30));

        txtQuantity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtQuantity.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        txtQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQuantityKeyPressed(evt);
            }
        });
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 130, 170, 30));

        jLabel33.setBackground(new java.awt.Color(255, 255, 255));
        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(27, 157, 175));
        jLabel33.setText("Quantity");
        jLabel33.setToolTipText("");
        jLabel33.setOpaque(true);
        jLabel33.setRequestFocusEnabled(false);
        add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 100, 100, 30));

        jLabel35.setBackground(new java.awt.Color(255, 255, 255));
        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(27, 157, 175));
        jLabel35.setText("Price");
        jLabel35.setToolTipText("");
        jLabel35.setOpaque(true);
        jLabel35.setRequestFocusEnabled(false);
        add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 100, 100, 30));

        txtPrice.setEditable(false);
        txtPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtPrice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPrice.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
        });
        add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 170, 30));

        txtBalance.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtBalance.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBalance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBalanceKeyPressed(evt);
            }
        });
        add(txtBalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 460, 190, 40));

        tblCustomerOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CustomerOrderId", "BatchId", "Item Id", "Item Name", "Price", "Quantity", "Quantity On Hand", "Amount"
            }
        ));
        jScrollPane1.setViewportView(tblCustomerOrder);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 1350, 230));

        btnPrint.setBackground(new java.awt.Color(255, 255, 255));
        btnPrint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPrint.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnPrint.setText("Print");
        btnPrint.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(27, 157, 175)));
        btnPrint.setOpaque(true);
        btnPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPrintMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnPrintMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnPrintMouseExited(evt);
            }
        });
        add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 520, 160, 40));

        btnRemoveItem.setBackground(new java.awt.Color(255, 255, 255));
        btnRemoveItem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRemoveItem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRemoveItem.setText("Remove Item");
        btnRemoveItem.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(27, 157, 175)));
        btnRemoveItem.setOpaque(true);
        btnRemoveItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveItemMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRemoveItemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRemoveItemMouseExited(evt);
            }
        });
        add(btnRemoveItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 570, 160, 40));

        txtQtyOnHand.setEditable(false);
        txtQtyOnHand.setBackground(new java.awt.Color(255, 255, 255));
        txtQtyOnHand.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtQtyOnHand.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQtyOnHand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtQtyOnHandKeyPressed(evt);
            }
        });
        add(txtQtyOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 130, 170, 30));

        jLabel37.setBackground(new java.awt.Color(255, 255, 255));
        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(27, 157, 175));
        jLabel37.setText("Qty On Hand");
        jLabel37.setToolTipText("");
        jLabel37.setOpaque(true);
        jLabel37.setRequestFocusEnabled(false);
        add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 100, 100, 30));

        txtNetAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNetAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNetAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNetAmountKeyPressed(evt);
            }
        });
        add(txtNetAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 510, 250, 40));

        jLabel36.setBackground(new java.awt.Color(255, 255, 255));
        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(27, 157, 175));
        jLabel36.setText("Balance");
        jLabel36.setToolTipText("");
        jLabel36.setOpaque(true);
        jLabel36.setRequestFocusEnabled(false);
        add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 460, 100, 30));

        jLabel38.setBackground(new java.awt.Color(255, 255, 255));
        jLabel38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(27, 157, 175));
        jLabel38.setText("Discount");
        jLabel38.setToolTipText("");
        jLabel38.setOpaque(true);
        jLabel38.setRequestFocusEnabled(false);
        add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 460, 100, 30));

        txtDiscount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDiscount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiscountActionPerformed(evt);
            }
        });
        txtDiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDiscountKeyPressed(evt);
            }
        });
        add(txtDiscount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 460, 250, 40));

        cmbPaymentType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CreditCard", "DebitCard", "cash", "cheque" }));
        cmbPaymentType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPaymentTypeItemStateChanged(evt);
            }
        });
        cmbPaymentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPaymentTypeActionPerformed(evt);
            }
        });
        cmbPaymentType.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbPaymentTypePropertyChange(evt);
            }
        });
        add(cmbPaymentType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 560, 190, 40));

        jLabel39.setBackground(new java.awt.Color(255, 255, 255));
        jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(27, 157, 175));
        jLabel39.setText("Net Amount");
        jLabel39.setToolTipText("");
        jLabel39.setOpaque(true);
        jLabel39.setRequestFocusEnabled(false);
        add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 510, 100, 30));

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSave.setText("Save ");
        btnSave.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(27, 157, 175)));
        btnSave.setOpaque(true);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 160, 40));

        txtCustomerId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCustomerId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCustomerId.setToolTipText("Press Enter");
        txtCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerIdActionPerformed(evt);
            }
        });
        txtCustomerId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyPressed(evt);
            }
        });
        add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 170, 30));

        jLabel40.setBackground(new java.awt.Color(255, 255, 255));
        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(27, 157, 175));
        jLabel40.setText("Customer Name");
        jLabel40.setToolTipText("");
        jLabel40.setOpaque(true);
        jLabel40.setRequestFocusEnabled(false);
        add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 140, 30));

        jLabel41.setBackground(new java.awt.Color(255, 255, 255));
        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(27, 157, 175));
        jLabel41.setText("Batch Id");
        jLabel41.setToolTipText("");
        jLabel41.setOpaque(true);
        jLabel41.setRequestFocusEnabled(false);
        add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 140, 30));

        txtPaymentId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPaymentId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPaymentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentIdActionPerformed(evt);
            }
        });
        txtPaymentId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPaymentIdKeyPressed(evt);
            }
        });
        add(txtPaymentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 170, 30));

        jLabel42.setBackground(new java.awt.Color(255, 255, 255));
        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(27, 157, 175));
        jLabel42.setText("Gross Amount");
        jLabel42.setToolTipText("");
        jLabel42.setOpaque(true);
        jLabel42.setRequestFocusEnabled(false);
        add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 410, 100, 30));

        txtPaidAmount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtPaidAmount.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPaidAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaidAmountActionPerformed(evt);
            }
        });
        txtPaidAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPaidAmountKeyPressed(evt);
            }
        });
        add(txtPaidAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 410, 190, 40));

        jLabel43.setBackground(new java.awt.Color(255, 255, 255));
        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(27, 157, 175));
        jLabel43.setText("Paid Amount");
        jLabel43.setToolTipText("");
        jLabel43.setOpaque(true);
        jLabel43.setRequestFocusEnabled(false);
        add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, 100, 30));

        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1300, 560, 50, 40));

        cacheCustomer.setBackground(new java.awt.Color(255, 255, 255));
        cacheCustomer.setText("Cache Customer");
        cacheCustomer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cacheCustomerItemStateChanged(evt);
            }
        });
        add(cacheCustomer, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 3, 160, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void txtOrderDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderDateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderDateKeyPressed

    private void cmbItemNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemNameItemStateChanged
        /* String companyName = (String)cmbSupplierCompany.getSelectedItem();
         try{
         Supplier searchName = SupplierController.searchSupplierName(companyName);
         cmbSupplierName.addItem(searchName.getSupplierName());
         } catch (ClassNotFoundException ex) {
         Logger.getLogger(SupplierOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
         } catch (SQLException ex) {
         Logger.getLogger(SupplierOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
         }*/
    }//GEN-LAST:event_cmbItemNameItemStateChanged

    private void cmbItemNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbItemNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbItemNameActionPerformed

    private void txtOrderIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOrderIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOrderIdKeyPressed

    private void txtBatchIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBatchIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBatchIdKeyPressed

    private void txtGrossAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGrossAmountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrossAmountKeyPressed

    private void cmbCustomerNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCustomerNameItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCustomerNameItemStateChanged

    private void cmbCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCustomerNameActionPerformed

    private void txtItemIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemIdKeyPressed

    private void txtQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQuantityKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityKeyPressed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceKeyPressed

    private void btnPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseClicked
        DefaultTableModel dtm = (DefaultTableModel) tblCustomerOrder.getModel();
        int index = tblCustomerOrder.getSelectedRow();
        double amount = (double) dtm.getValueAt(index, 5);
        dtm.removeRow(index);
        totalAmount -= amount;
        txtGrossAmount.setText("" + totalAmount);
    }//GEN-LAST:event_btnPrintMouseClicked

    private void btnRemoveItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveItemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveItemMouseClicked

    private void txtQtyOnHandKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyOnHandKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtyOnHandKeyPressed

    private void txtNetAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNetAmountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetAmountKeyPressed

    private void txtDiscountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDiscountKeyPressed
        String customerId = txtCustomerId.getText();
        String customerOrderId = txtOrderId.getText();
        String date = txtOrderDate.getText();

    }//GEN-LAST:event_txtDiscountKeyPressed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked

        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please Complete the Form");
        } else {
            String customerId = txtCustomerId.getText();
            String customerOrderId = txtOrderId.getText();
            String date = txtOrderDate.getText();
            double grossAmount = Double.parseDouble(txtGrossAmount.getText());
            double discount = Double.parseDouble(txtDiscount.getText());
            double netAmount = Double.parseDouble(txtNetAmount.getText());
            // ArrayList<CustomerOrderDTO> customerOrderList = new ArrayList<>();

            CustomerOrderDTO customerOrder = new CustomerOrderDTO();
            customerOrder.setCustomerId(customerId);
            customerOrder.setCustomerOrderId(customerOrderId);
            customerOrder.setOrderDate(date);
            customerOrder.setDiscount(discount);
            customerOrder.setNetAmount(netAmount);
            customerOrder.setGrossAmount(grossAmount);

            // customerOrderList.add(customerOrder);
            ArrayList<CustomerOrderPaymentDTO> paymentList = new ArrayList<>();

            ArrayList<CustomerOrderDetailDTO> orderDetail = new ArrayList<>();
            CustomerOrderPaymentDTO payment = new CustomerOrderPaymentDTO();

            for (int i = 0; i < dtm.getRowCount(); i++) {
                CustomerOrderDetailDTO dto = new CustomerOrderDetailDTO();
                String orderId = (String) dtm.getValueAt(i, 0);
                batchId = (String) dtm.getValueAt(i, 1);
               // qtyOnHand =  (double)dtm.getValueAt(i,6);
                double qty = (double) dtm.getValueAt(i, 5);
                dto.setBatchId(batchId);
                dto.setCustomerOrderId(orderId);
                dto.setQuantity(qty);
                orderDetail.add(dto);

            }
            String paymentId = txtPaymentId.getText();
            String paymentType = (String) cmbPaymentType.getSelectedItem();
            payment.setCustomerOrderId(customerOrderId);
            payment.setPaymentId(paymentId);
            payment.setPaymentType(paymentType);
            payment.setDate(date);
            paymentList.add(payment);
            try {
                //System.out.println(customerOrderList + "aaaaaaaaaaaaa");
                boolean isAdded = cutomerOrderController.add(paymentList, orderDetail, customerOrder);
                if (isAdded) {
                    
                   // String quantityOnHand = (String) tblCustomerOrder.getValueAt(WIDTH, WIDTH);
                    //String batchId = txtBatchId.getText();
                    //String qtyOnHand = txtQtyOnHand.getText();
                    for (int i = 0; i < dtm.getRowCount(); i++) {
                        String id = (String) dtm.getValueAt(i,1);
                        String qty = (String) dtm.getValueAt(i, 6);
                         String[] update = {id,qty};
                    isUpdated = batchController.batchUpdate(update);
                    
                    }
                    if (isUpdated) {
                        JOptionPane.showMessageDialog(this, "Added Successfully");
                    } else {
                        JOptionPane.showMessageDialog(this, "Added Fail");
                    }
                   

                }
            } catch (Exception ex) {
                Logger.getLogger(CustomerOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnSaveMouseClicked

    private void txtCustomerIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustomerIdKeyPressed

    private void txtCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerIdActionPerformed
        String id = txtCustomerId.getText();
        try {
            CustomerDTO name = customerController.search(id);
            cmbCustomerName.removeAllItems();
            cmbCustomerName.addItem(name.getCustomerName());
        } catch (Exception ex) {
            Logger.getLogger(CustomerOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtCustomerIdActionPerformed

    private void txtBatchIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBatchIdActionPerformed
        loadAllItems();
        txtQuantity.requestFocus();
    }//GEN-LAST:event_txtBatchIdActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        String itemId = txtItemId.getText();
        String itemName = (String) cmbItemName.getSelectedItem();
        String batchId = txtBatchId.getText();
        String orderId = txtOrderId.getText();
        double price = Double.parseDouble(txtPrice.getText());
        double quantity = Double.parseDouble(txtQuantity.getText());
        double quantityOnHand = Double.parseDouble(txtQtyOnHand.getText());
        
        //double amount = price * quantity;
        //DefaultTableModel dtm = (DefaultTableModel) tblCustomerOrder.getModel();
        //String customerId = txtCustomerId.getText();
        if (quantity <= quantityOnHand) {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String id = (String) dtm.getValueAt(i, 1);
                if (id.equals(batchId)) {
                    double qty = (double) dtm.getValueAt(i, 5);
                    quantity += qty;
                    dtm.removeRow(i);
                    totalAmount -= price * quantity;
                }
            }
            double amount = price * quantity;
            totalAmount += amount;
            txtGrossAmount.setText("" + totalAmount);
            
            quantityOnHand -= Double.parseDouble(txtQuantity.getText());
            txtQtyOnHand.setText(" " + quantityOnHand);
            //double qtyOn =Double.parseDouble(txtQtyOnHand.getText());
            Object[] rowData = {orderId, batchId, itemId, itemName, price,quantity,txtQtyOnHand.getText(),amount};
            dtm.addRow(rowData);
//            quantityOnHand -= Double.parseDouble(txtQuantity.getText());
//            txtQtyOnHand.setText(" " + quantityOnHand);
            txtBatchId.setText(null);
            txtItemId.setText(null);
            txtPrice.setText(null);
            txtQuantity.setText(null);
            // txtQtyOnHand.setText(null);
            cmbItemName.removeAllItems();
            txtBatchId.requestFocus();
        } else {
            JOptionPane.showMessageDialog(this, "Low Stock");
        }

    }//GEN-LAST:event_txtQuantityActionPerformed

    private void txtPaymentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentIdActionPerformed

    private void txtPaymentIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentIdKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentIdKeyPressed

    private void txtDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiscountActionPerformed
        // String discount  = txtDiscount.getText();
        //  String grossAmount = txtGrossAmount.getText();
        double tax = Double.parseDouble(txtGrossAmount.getText()) - (Double.parseDouble(txtGrossAmount.getText()) * Double.parseDouble(txtDiscount.getText()) * 0.01);
        txtNetAmount.setText("" + tax);
    }//GEN-LAST:event_txtDiscountActionPerformed

    private void cmbPaymentTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPaymentTypeItemStateChanged
//        int selectedIndex = cmbPaymentType.getSelectedIndex();
//        if(selectedIndex==1){
//            CreditCardDetail c1 = new CreditCardDetail(null, true);
//            c1.setVisible(true);
//        }
//        if(selectedIndex==2){
//            DebitCardDetail c2 = new DebitCardDetail(null, true);
//            c2.setVisible(true);
//        }
//       
//        CreditCardDetail detail = new CreditCardDetail(null, true);
//        DebitCardDetail dcd = new DebitCardDetail(null, true);
//        String toString = cmbPaymentType.getSelectedItem().toString();
//        if (toString.equals("CreditCard")) {
//            dcd.dispose();
//            detail.setVisible(true);
//            detail.dispose();
//        }else if (toString.equals("DebitCard")) {
//            detail.dispose();
//            dcd.setVisible(true);
//            dcd.dispose();
//        }
    }//GEN-LAST:event_cmbPaymentTypeItemStateChanged

    private void txtBalanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBalanceKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBalanceKeyPressed

    private void txtPaidAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidAmountKeyPressed

    }//GEN-LAST:event_txtPaidAmountKeyPressed

    private void txtPaidAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaidAmountActionPerformed
        txtBalance.setText("" + (Double.parseDouble(txtPaidAmount.getText()) - Double.parseDouble(txtNetAmount.getText())));
    }//GEN-LAST:event_txtPaidAmountActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
//        CreditCardDetail detail = new CreditCardDetail(null, true);
//        DebitCardDetail dcd = new DebitCardDetail(null, true);
//        String toString = cmbPaymentType.getSelectedItem().toString();
//        if (toString.equals("CreditCard")) {
//            dcd.dispose();
//            detail.setVisible(true);
//            detail.dispose();
//        }else if (toString.equals("DebitCard")) {
//            detail.dispose();
//            dcd.setVisible(true);
//            dcd.dispose();
//        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void cmbPaymentTypePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbPaymentTypePropertyChange
        //
    }//GEN-LAST:event_cmbPaymentTypePropertyChange

    private void cmbPaymentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPaymentTypeActionPerformed
        CreditCardDetail detail = new CreditCardDetail(null, true);
        DebitCardDetail dcd = new DebitCardDetail(null, true);
        ChqueDetail chq = new ChqueDetail(null, true);
        String toString = cmbPaymentType.getSelectedItem().toString();
        if (toString.equals("CreditCard")) {
            dcd.dispose();
            detail.setVisible(true);
            detail.dispose();
        } else if (toString.equals("DebitCard")) {
            detail.dispose();
            dcd.setVisible(true);
            dcd.dispose();
        } else if (toString.equals("cheque")) {
            chq.setVisible(true);
        }
    }//GEN-LAST:event_cmbPaymentTypeActionPerformed

    private void cacheCustomerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cacheCustomerItemStateChanged
        if (cacheCustomer.isSelected()) {
            txtCustomerId.setText("C001");
            cmbCustomerName.setSelectedItem("CashCustomer");

        } else {
            txtCustomerId.setText("");
            cmbCustomerName.setSelectedItem("");
        }
    }//GEN-LAST:event_cacheCustomerItemStateChanged

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered

        btnSave.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        btnSave.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnPrintMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseEntered
        btnPrint.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_btnPrintMouseEntered

    private void btnPrintMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPrintMouseExited
        btnPrint.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnPrintMouseExited

    private void btnRemoveItemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveItemMouseEntered
        btnRemoveItem.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_btnRemoveItemMouseEntered

    private void btnRemoveItemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveItemMouseExited
        btnRemoveItem.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnRemoveItemMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnPrint;
    private javax.swing.JLabel btnRemoveItem;
    private javax.swing.JLabel btnSave;
    private javax.swing.JRadioButton cacheCustomer;
    private javax.swing.JComboBox cmbCustomerName;
    private javax.swing.JComboBox cmbItemName;
    private javax.swing.JComboBox cmbPaymentType;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCustomerOrder;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtBatchId;
    private javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextField txtDiscount;
    private javax.swing.JTextField txtGrossAmount;
    private javax.swing.JTextField txtItemId;
    private javax.swing.JTextField txtNetAmount;
    private javax.swing.JTextField txtOrderDate;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtPaidAmount;
    private javax.swing.JTextField txtPaymentId;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQtyOnHand;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
    private double totalAmount;

    private void loadItemNames() {
        try {
            cmbItemName.removeAllItems();
            ArrayList<ItemDTO> itemList = itemController.getAll();
            for (ItemDTO itemDto : itemList) {
                cmbItemName.addItem(itemDto.getItemName());
            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadCustomerNames() {
        cmbCustomerName.removeAllItems();
        try {
            cmbCustomerName.removeAllItems();

            ArrayList<CustomerDTO> customerList = customerController.getAll();
            for (CustomerDTO customerList1 : customerList) {
                cmbCustomerName.addItem(customerList1.getCustomerName());

            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllItems() {
        String batchId = txtBatchId.getText();
        try {

            BatchDTO search = batchController.search(batchId);
            if (search == null) {
                JOptionPane.showMessageDialog(this, "Batch not Found");
            } else {
                txtItemId.setText(search.getItemId());
                String ItemId = txtItemId.getText();

                String itemName = itemController.getItemName(ItemId);
                cmbItemName.removeAllItems();
                cmbItemName.addItem(itemName);
                double price = search.getUnitPrice();
                txtPrice.setText("" + price);
                double qtyOnHand = search.getAmmount();
                txtQtyOnHand.setText("" + qtyOnHand);
            }

        } catch (Exception ex) {
            Logger.getLogger(CustomerOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void setOrderDate() {
        java.util.Date d1 = new java.util.Date();
        SimpleDateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        String formatDate = df.format(d1);
        txtOrderDate.setText(formatDate);
    }

    private void getID() {
        String newID;
        try {
            newID = IDGenerator.getNewID("customerOrder", "customerOrderId", "COI");
            txtOrderId.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }

    private void getPavementID() {
        String newID;
        try {
            newID = IDGenerator.getNewID("customerPayment", "paymentId", "P");
            txtPaymentId.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }
//    private void adas(){
//        
//    }

}
