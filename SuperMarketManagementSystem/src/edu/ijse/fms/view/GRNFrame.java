/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ijse.fms.view;

import edu.ijse.fms.common.IDGenerator;
import edu.ijse.fms.controller.ControllerFactory;
import edu.ijse.fms.controller.custom.BatchController;
import edu.ijse.fms.controller.custom.GrnController;
import edu.ijse.fms.controller.custom.ItemController;
import edu.ijse.fms.controller.custom.ItemNameBatchIdController;
import edu.ijse.fms.controller.custom.SupplierOrderDetailController;
import edu.ijse.fms.controller.custom.ViewSupplierOrderController;
import edu.ijse.fms.dto.BatchDTO;
import edu.ijse.fms.dto.GrnDto;
import edu.ijse.fms.dto.GrnOrdeDetailDTO;
import edu.ijse.fms.dto.ItemDTO;
import edu.ijse.fms.dto.SupplierDTO;
import edu.ijse.fms.dto.SupplierOrderDetailDTO;
import edu.ijse.fms.dto.SupplierOrderPaymentDTO;
import edu.ijse.fms.dto.ViewSupplierOrderDTO;
import edu.ijse.fms.view.panel.SupplierOrderPanel;
import java.awt.Color;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author Gnanod
 */
public class GRNFrame extends javax.swing.JFrame {

    /**
     * Creates new form GRNFrame
     */
    private ViewSupplierOrderController viewSupplierOrderController;
    private SupplierOrderDetailController supplierOrderDetailController;
    private ItemController itemController;
    private GrnController grnController;
    private DefaultTableModel dtm;
    private DefaultTableModel grnTable;
    private BatchController batchController;
    private ItemNameBatchIdController itemNameBatchIdController;
    private double totalAmount;

    public GRNFrame() {
        initComponents();
        setOrderDate();
        viewSupplierOrderController = (ViewSupplierOrderController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.VIEWSUPPLIERORDER);
        itemController = (ItemController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ITEM);
        supplierOrderDetailController = (SupplierOrderDetailController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.SUPPLIERORERDETAIL);
        grnController = (GrnController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.GRN);
        dtm = (DefaultTableModel) tblSupplierOrder.getModel();
        grnTable = (DefaultTableModel) tblGrn.getModel();
        batchController = (BatchController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.BATCH);
        itemNameBatchIdController = (ItemNameBatchIdController) ControllerFactory.getInstance().getController(ControllerFactory.ControllerTypes.ITEMMNAMEBATCHID);
        //viewSupplierOrder();
        getID();
//        getBrandID();
        loadItemNames();
        loadBatchId();
        AutoCompleteDecorator.decorate(cmbItemName);
        AutoCompleteDecorator.decorate(cmbBatchId);
        getPavementID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblClose = new javax.swing.JLabel();
        lblMinimize = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCustomerId = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtGrnDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtGrnId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplierOrder = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        txtBuyingPrice = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtSellingPrice = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtQuantityOnHand = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGrn = new javax.swing.JTable();
        txtQuantity = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        btnSave = new javax.swing.JLabel();
        cmbItemName = new javax.swing.JComboBox();
        cmbBatchId = new javax.swing.JComboBox();
        btnRemove = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTotalAmount = new javax.swing.JTextField();
        txtSupplierOrderPayment = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cmbPaymentType = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblClose.setBackground(new java.awt.Color(40, 202, 204));
        lblClose.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblClose.setText("   X");
        lblClose.setOpaque(true);
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblCloseMouseExited(evt);
            }
        });
        jPanel1.add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1330, 0, 40, 40));

        lblMinimize.setBackground(new java.awt.Color(40, 202, 204));
        lblMinimize.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMinimize.setText("  -");
        lblMinimize.setOpaque(true);
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseExited(evt);
            }
        });
        jPanel1.add(lblMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(1290, 0, 40, 40));

        jLabel2.setBackground(new java.awt.Color(215, 222, 228));
        jLabel2.setAutoscrolls(true);
        jLabel2.setOpaque(true);
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1370, 40));

        txtCustomerId.setToolTipText("Search Supplier Order");
        txtCustomerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomerIdActionPerformed(evt);
            }
        });
        txtCustomerId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCustomerIdKeyReleased(evt);
            }
        });
        jPanel1.add(txtCustomerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 530, 290, 30));

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(27, 157, 175));
        jLabel12.setText("Supplier Payment Id");
        jLabel12.setToolTipText("");
        jLabel12.setOpaque(true);
        jLabel12.setRequestFocusEnabled(false);
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 150, 30));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(27, 157, 175));
        jLabel20.setText("          Date");
        jLabel20.setToolTipText("");
        jLabel20.setOpaque(true);
        jLabel20.setRequestFocusEnabled(false);
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 100, 120, 30));

        txtGrnDate.setEditable(false);
        txtGrnDate.setBackground(new java.awt.Color(255, 255, 255));
        txtGrnDate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtGrnDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtGrnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrnDateActionPerformed(evt);
            }
        });
        jPanel1.add(txtGrnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 100, 190, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/fms/images/Long Arrow Left_52px.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 40));

        jLabel3.setBackground(new java.awt.Color(40, 202, 204));
        jLabel3.setOpaque(true);
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 40));

        txtGrnId.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtGrnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrnIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtGrnId, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 200, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/ijse/fms/images/Search.png"))); // NOI18N
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 530, 50, 30));

        tblSupplierOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SupplierOrderId", "SupplierName", "Supplier Company", "Date", "Item Name ", "Quantity On Hand", "Buying Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSupplierOrder);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 1350, 190));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(27, 157, 175));
        jLabel13.setText("Buying Price");
        jLabel13.setToolTipText("");
        jLabel13.setOpaque(true);
        jLabel13.setRequestFocusEnabled(false);
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, 120, 30));

        txtBuyingPrice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtBuyingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuyingPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtBuyingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 180, 190, 30));

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(27, 157, 175));
        jLabel14.setText("Selling Price");
        jLabel14.setToolTipText("");
        jLabel14.setOpaque(true);
        jLabel14.setRequestFocusEnabled(false);
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 150, 120, 30));

        txtSellingPrice.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtSellingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSellingPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtSellingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 180, 190, 30));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(27, 157, 175));
        jLabel15.setText("Qty On Hand");
        jLabel15.setToolTipText("");
        jLabel15.setOpaque(true);
        jLabel15.setRequestFocusEnabled(false);
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 150, 120, 30));

        txtQuantityOnHand.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtQuantityOnHand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityOnHandActionPerformed(evt);
            }
        });
        jPanel1.add(txtQuantityOnHand, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 180, 190, 30));

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(27, 157, 175));
        jLabel16.setText("Item Name");
        jLabel16.setToolTipText("");
        jLabel16.setOpaque(true);
        jLabel16.setRequestFocusEnabled(false);
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 120, 30));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(27, 157, 175));
        jLabel17.setText("Batch Id");
        jLabel17.setToolTipText("");
        jLabel17.setOpaque(true);
        jLabel17.setRequestFocusEnabled(false);
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 100, 30));

        tblGrn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GRN Id", "Item Name", "Batch Id", "Date ", "Buying Price", "Selling Price", "Quantity", "Quantity On Hand", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblGrn);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 1360, 190));

        txtQuantity.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantityActionPerformed(evt);
            }
        });
        jPanel1.add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 180, 190, 30));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(27, 157, 175));
        jLabel18.setText("Quantity");
        jLabel18.setToolTipText("");
        jLabel18.setOpaque(true);
        jLabel18.setRequestFocusEnabled(false);
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 150, 120, 30));

        btnSave.setBackground(new java.awt.Color(255, 255, 255));
        btnSave.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSave.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnSave.setText("Save");
        btnSave.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(27, 157, 175)));
        btnSave.setOpaque(true);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        jPanel1.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 530, 170, 30));

        cmbItemName.setEditable(true);
        cmbItemName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmbItemName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemNameItemStateChanged(evt);
            }
        });
        jPanel1.add(cmbItemName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 180, 30));

        cmbBatchId.setEditable(true);
        cmbBatchId.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(cmbBatchId, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, 190, 30));

        btnRemove.setBackground(new java.awt.Color(255, 255, 255));
        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnRemove.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnRemove.setText("Remove Item");
        btnRemove.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(27, 157, 175)));
        btnRemove.setOpaque(true);
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRemoveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRemoveMouseExited(evt);
            }
        });
        jPanel1.add(btnRemove, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 140, 30));

        jLabel25.setBackground(new java.awt.Color(255, 255, 255));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(27, 157, 175));
        jLabel25.setText("Payment Type");
        jLabel25.setToolTipText("");
        jLabel25.setOpaque(true);
        jLabel25.setRequestFocusEnabled(false);
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 490, 120, 30));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(27, 157, 175));
        jLabel19.setText(" GRN Id");
        jLabel19.setToolTipText("");
        jLabel19.setOpaque(true);
        jLabel19.setRequestFocusEnabled(false);
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 70, 30));

        txtTotalAmount.setEditable(false);
        txtTotalAmount.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalAmount.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTotalAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalAmountActionPerformed(evt);
            }
        });
        jPanel1.add(txtTotalAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 450, 170, 30));

        txtSupplierOrderPayment.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jPanel1.add(txtSupplierOrderPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 100, 200, 30));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(40, 202, 204)));
        jLabel5.setOpaque(true);
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 1370, 160));

        jLabel26.setBackground(new java.awt.Color(255, 255, 255));
        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(27, 157, 175));
        jLabel26.setText(" Total Amount");
        jLabel26.setToolTipText("");
        jLabel26.setOpaque(true);
        jLabel26.setRequestFocusEnabled(false);
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 450, 120, 30));

        cmbPaymentType.setEditable(true);
        cmbPaymentType.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmbPaymentType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CreditCard", "DebitCard", "cash", "cheque" }));
        cmbPaymentType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPaymentTypeItemStateChanged(evt);
            }
        });
        cmbPaymentType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPaymentTypeActionPerformed(evt);
            }
        });
        cmbPaymentType.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cmbPaymentTypePropertyChange(evt);
            }
        });
        jPanel1.add(cmbPaymentType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 490, 170, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseClicked
        this.setState(1);
    }//GEN-LAST:event_lblMinimizeMouseClicked

    private void lblMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseEntered
        lblMinimize.setBackground(new Color(128, 169, 211));
    }//GEN-LAST:event_lblMinimizeMouseEntered

    private void lblMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseExited
        lblMinimize.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_lblMinimizeMouseExited

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        dispose();
    }//GEN-LAST:event_lblCloseMouseClicked

    private void lblCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseEntered
        lblClose.setBackground(new Color(255, 0, 0));
    }//GEN-LAST:event_lblCloseMouseEntered

    private void lblCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseExited
        lblClose.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_lblCloseMouseExited

    private void txtCustomerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomerIdActionPerformed
        String type = txtCustomerId.getText();
        try {
            ArrayList<ViewSupplierOrderDTO> list = viewSupplierOrderController.searchType(type);
            if (list != null) {
                //dtm.setRowCount(0);
                for (ViewSupplierOrderDTO list1 : list) {
                    //System.out.println(list1.getSupplierOrderId() + "hhhhhhhh");
                    Object[] data = {list1.getSupplierOrderId(), list1.getSupplierName(), list1.getSupplierCompany(),
                        list1.getSupplierOrderDate(), list1.getItemName(), list1.getQuantity(),
                        list1.getBuyingPrice()};
                    dtm.addRow(data);

                }
            }

            //ViewSupplierOrderDTO supplierOrderDto = viewSupplierOrderController.serchType(type);
//            for (ViewSupplierOrderDTO supplierOrderDto : list) {
//                if (supplierOrderDto == null) {
//                JOptionPane.showMessageDialog(this, "Name is not found");
//            } else {
//                    for (ViewSupplierOrderDTO list1 : list) {
//                        
//                        Object[] rowData = {list1.getSupplierOrderId(), supplierOrderDto.getSupplierName(), supplierOrderDto.getSupplierCompany(), supplierOrderDto.getSupplierOrderDate(), supplierOrderDto.getItemName(), supplierOrderDto.getQuantity(), supplierOrderDto.getBuyingPrice()};
//                    System.out.println(rowData);dtm.setRowCount(0);
//                dtm.addRow(rowData);
//                    }
//                   
//            }
//            }
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_txtCustomerIdActionPerformed

    private void txtGrnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrnDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrnDateActionPerformed

    private void txtGrnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrnIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGrnIdActionPerformed

    private void txtBuyingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyingPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuyingPriceActionPerformed

    private void txtSellingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSellingPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSellingPriceActionPerformed

    private void txtQuantityOnHandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityOnHandActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantityOnHandActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantityActionPerformed
        String grnId = txtGrnId.getText();
        String itemName = (String) cmbItemName.getSelectedItem();
        String batchId = (String) cmbBatchId.getSelectedItem();
        String date = txtGrnDate.getText();
        double buyingPrice = Double.parseDouble(txtBuyingPrice.getText());
        double sellingPrice = Double.parseDouble(txtSellingPrice.getText());
        double quantity = Double.parseDouble(txtQuantity.getText());
        double quantityOnHand = Double.parseDouble(txtQuantityOnHand.getText());
        for (int i = 0; i < grnTable.getRowCount(); i++) {
            String id = (String) grnTable.getValueAt(i, 2);
            if (id.equals(batchId)) {
                double qty = (double) grnTable.getValueAt(i, 6);
                quantity += qty;
                grnTable.removeRow(i);
                totalAmount -= quantity * buyingPrice;
            }
        }
        double amount = buyingPrice * quantity;
        totalAmount += amount;
        txtTotalAmount.setText("" + totalAmount);
        quantityOnHand += Double.parseDouble(txtQuantity.getText());
        txtQuantityOnHand.setText("" + quantityOnHand);
        Object[] rowData = {grnId, itemName, batchId, date, buyingPrice, sellingPrice, quantity, quantityOnHand, amount};
        grnTable.addRow(rowData);
    }//GEN-LAST:event_txtQuantityActionPerformed

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
//        DefaultTableModel dtm = (DefaultTableModel) supplierOrdertable.getModel();
//        int index = supplierOrdertable.getSelectedRow();
//        double amount = (double) dtm.getValueAt(index, 5);
//        dtm.removeRow(index);
//        totalAmount -= amount;
//        txtTotalAmount.setText("" + totalAmount);

        String grnId = txtGrnId.getText();
        String date = txtGrnDate.getText();
        GrnDto dto = new GrnDto(grnId, date);
        String batchId = (String) cmbBatchId.getSelectedItem();

        ArrayList<GrnOrdeDetailDTO> grnDetailList = new ArrayList<>();

        ArrayList<BatchDTO> batchList = new ArrayList<>();
        ArrayList<SupplierOrderPaymentDTO> supplierList = new ArrayList<>();

        for (int i = 0; i < grnTable.getRowCount(); i++) {
            GrnOrdeDetailDTO detailDto = new GrnOrdeDetailDTO();

            BatchDTO batchDto = new BatchDTO();
            String grn1Id = (String) grnTable.getValueAt(i, 0);
            detailDto.setGrnId(grn1Id);
            String itemName = (String) grnTable.getValueAt(i, 1);
            String itemId = null;
            try {
                itemId = itemController.getItemId(itemName);
                System.out.println(itemId);
            } catch (Exception ex) {
                Logger.getLogger(SupplierOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

            detailDto.setItemId(itemId);
            double sellingPrice = (double) grnTable.getValueAt(i, 5);
            double buyingPrice = (double) grnTable.getValueAt(i, 4);
            double quantity = (double) grnTable.getValueAt(i, 6);
            String batch = (String) grnTable.getValueAt(i, 2);
           // System.out.println(batch + "tttttttttttttt");

            detailDto.setBuyingPrice(buyingPrice);
            detailDto.setSellingPrice(sellingPrice);
            detailDto.setQuantity(quantity);
            // grnDetailList.add(detailDto);
            grnDetailList.add(detailDto);
            batchDto.setGrnId(grnId);
            batchDto.setUnitPrice(buyingPrice);
            batchDto.setAmmount(quantity);
            batchDto.setBatchId(batch);
            batchDto.setItemId(itemId);
            batchList.add(batchDto);
            System.out.println(batchList.size());
//            for (BatchDTO batchList1 : batchList) {
//                System.out.println(batchList1.getGrnId() + "gfgtrf");
//                System.out.println(batchList1.getAmount() + "gfgtrf");
//                System.out.println(batchList1.getBatchId() + "gfgtrf");
//                System.out.println(batchList1.getItemId() + "gfgtrf");
//                System.out.println(batchList1.getUnitPrice() + "gfgtrf");
//
//            }

        }
        String payment = txtSupplierOrderPayment.getText();
        String paymentType = (String) cmbPaymentType.getSelectedItem();
        SupplierOrderPaymentDTO supplierPayment = new SupplierOrderPaymentDTO();
        supplierPayment.setPaymentId(payment);
        supplierPayment.setGrnId(grnId);
        supplierPayment.setPaymentType(paymentType);
        supplierPayment.setDate(date);
        //supplierList.add(supplierPayment);
        try {
            boolean isAdded = grnController.add(dto, grnDetailList, batchList, supplierPayment);
            if (isAdded) {
                JOptionPane.showMessageDialog(this, "Stock is Added to the system");
            } else {
                JOptionPane.showMessageDialog(this, "Added Fail");
            }
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveMouseClicked

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        if (dtm.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please Select a Row");
        } else {
            int index = tblGrn.getSelectedRow();
            grnTable.removeRow(index);

        }

    }//GEN-LAST:event_btnRemoveMouseClicked

    private void txtCustomerIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCustomerIdKeyReleased


    }//GEN-LAST:event_txtCustomerIdKeyReleased

    private void cmbItemNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemNameItemStateChanged
        String name = (String) cmbItemName.getSelectedItem();
        String itemId = null;
        String batchId = null;

        try {
            itemId = itemController.getItemId(name);

        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            batchId = batchController.searchBatchId(itemId);
            System.out.println(batchId + "ppppppppppppppppppppppppppppppppp");
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            SupplierOrderDetailDTO order = supplierOrderDetailController.searchPrice(itemId);
            System.out.println(order);
            if (order != null) {
                cmbBatchId.removeAllItems();
                // cmbBatchId.addItem(batchId);
                txtBuyingPrice.setText("" + order.getBuyingPrice());
                txtQuantityOnHand.setText("" + order.getQuantity());
            }
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            batchId = itemNameBatchIdController.serchBatchId(name);
            cmbBatchId.removeAllItems();
            //  cmbBatchId.addItem(itemId);
            cmbBatchId.addItem(batchId);
            txtSellingPrice.requestFocus();
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbItemNameItemStateChanged

    private void txtTotalAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalAmountActionPerformed

    private void cmbPaymentTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPaymentTypeItemStateChanged
        //        int selectedIndex = cmbPaymentType.getSelectedIndex();
        //        if(selectedIndex==1){
        //            CreditCardDetail c1 = new CreditCardDetail(null, true);
        //            c1.setVisible(true);
        //        }
        //        if(selectedIndex==2){
        //            DebitCardDetail c2 = new DebitCardDetail(null, true);
        //            c2.setVisible(true);
        //        }
        //
        //        CreditCardDetail detail = new CreditCardDetail(null, true);
        //        DebitCardDetail dcd = new DebitCardDetail(null, true);
        //        String toString = cmbPaymentType.getSelectedItem().toString();
        //        if (toString.equals("CreditCard")) {
        //            dcd.dispose();
        //            detail.setVisible(true);
        //            detail.dispose();
        //        }else if (toString.equals("DebitCard")) {
        //            detail.dispose();
        //            dcd.setVisible(true);
        //            dcd.dispose();
        //        }
    }//GEN-LAST:event_cmbPaymentTypeItemStateChanged

    private void cmbPaymentTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPaymentTypeActionPerformed
        CreditCardDetail detail = new CreditCardDetail(null, true);
        DebitCardDetail dcd = new DebitCardDetail(null, true);
        ChqueDetail chq = new ChqueDetail(null, true);
        String toString = cmbPaymentType.getSelectedItem().toString();
        if (toString.equals("CreditCard")) {
            dcd.dispose();
            detail.setVisible(true);
            detail.dispose();
        } else if (toString.equals("DebitCard")) {
            detail.dispose();
            dcd.setVisible(true);
            dcd.dispose();
        } else if (toString.equals("cheque")) {
            chq.setVisible(true);
        }
    }//GEN-LAST:event_cmbPaymentTypeActionPerformed

    private void cmbPaymentTypePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cmbPaymentTypePropertyChange
        //
    }//GEN-LAST:event_cmbPaymentTypePropertyChange

    private void btnRemoveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseEntered
        btnRemove.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_btnRemoveMouseEntered

    private void btnRemoveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseExited
        btnRemove.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnRemoveMouseExited

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        btnSave.setBackground(new Color(40, 202, 204));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
       btnSave.setBackground(new Color(255, 255, 255));
    }//GEN-LAST:event_btnSaveMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRNFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRNFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRNFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRNFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GRNFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnRemove;
    private javax.swing.JLabel btnSave;
    private javax.swing.JComboBox cmbBatchId;
    private javax.swing.JComboBox cmbItemName;
    private javax.swing.JComboBox cmbPaymentType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JTable tblGrn;
    private javax.swing.JTable tblSupplierOrder;
    private javax.swing.JTextField txtBuyingPrice;
    private javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextField txtGrnDate;
    private javax.swing.JTextField txtGrnId;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtQuantityOnHand;
    private javax.swing.JTextField txtSellingPrice;
    private javax.swing.JTextField txtSupplierOrderPayment;
    private javax.swing.JTextField txtTotalAmount;
    // End of variables declaration//GEN-END:variables
public void setOrderDate() {
        java.util.Date d1 = new java.util.Date();
        SimpleDateFormat df = new SimpleDateFormat("YYYY-MM-dd");
        String formatDate = df.format(d1);
        txtGrnDate.setText(formatDate);
    }

    private void viewSupplierOrder() {
        try {
            ArrayList<ViewSupplierOrderDTO> supplierOrderList = viewSupplierOrderController.getAll();
            System.out.println(supplierOrderList);
            if (supplierOrderList == null) {
                return;
            }
            for (ViewSupplierOrderDTO order : supplierOrderList) {
                Object[] rowData = {order.getSupplierOrderId(), order.getSupplierName(), order.getSupplierCompany(), order.getSupplierOrderDate(), order.getItemName(), order.getQuantity(), order.getBuyingPrice()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getID() {
        String newID;
        try {
            newID = IDGenerator.getNewID("grn", "grnId", "G");
            txtGrnId.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }

    private void loadItemNames() {
        try {
            cmbItemName.removeAllItems();
            ArrayList<ItemDTO> itemList = itemController.getAll();
            for (ItemDTO itemDto : itemList) {
                cmbItemName.addItem(itemDto.getItemName());
            }
        } catch (Exception ex) {
            Logger.getLogger(SupplierOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadBatchId() {
        try {
            cmbBatchId.removeAllItems();
            ArrayList<BatchDTO> batchList = batchController.getAll();
            for (BatchDTO batchList1 : batchList) {
                cmbBatchId.addItem(batchList1.getBatchId());
            }
        } catch (Exception ex) {
            Logger.getLogger(GRNFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getPavementID() {
        String newID;
        try {
            newID = IDGenerator.getNewID("supplierOrderPayment", "supplierPaymentId", "SOP");
            txtSupplierOrderPayment.setText(newID);

        } catch (ClassNotFoundException | SQLException e) {
        }
    }
}
